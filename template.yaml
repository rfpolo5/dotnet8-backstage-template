apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
# some metadata about the template itself
metadata:
  name: dotnet8-template
  title: Dotnet 8 Template
  description: Scaffold a new .NET 8 project
  tags:
    - dotnet
    - csharp
    - webapi
    - recommended
spec:
  owner: user:rfpolo5
  type: service
  # these are the steps which are rendered in the frontend with the form input
  # https://backstage.io/docs/features/software-templates/input-examples
  parameters:
    - title: Complete the form to create a new .NET 8 project
      ui:ObjectFieldTemplate: TwoColumn
      required:
        - name
        - description
        - system
      properties:
        name:
          type: string
          title: Project Name
          description: The name of the project
          ui:autofocus: true          
          ui:field: ValidateKebabCase # Custom field extension
        description:
          title: Description
          type: string
          description: A description for the component
        owner:
          title: Select in which group the component will be created
          type: string
          description: The group the component belongs to
          ui:field: MyGroupsPicker          
        system:
          title: System
          type: string
          description: The system the component belongs to
          ui:field: EntityPicker
          ui:options:
            catalogFilter:
              kind: System
    - title: Choose a destination
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository URL
          type: string
          description: The URL of the repository
          ui:field: RepoUrlPicker          
          ui:options:            
            allowedOwners:
              - rfpolo5
              - returngis
            allowedHosts:
              - github.com
  # here's the steps that are executed in series in the scaffolder backend
  # You can see all actions you have registered here: http://localhost:3000/create/actions
  steps:
    - id: fetch-base
      name: Fetch Template
      action: fetch:template
      input:
        url: ./skeleton
        copyWithoutTemplating:
          - .github/workflows/*    
        values:
          name: ${{ parameters.name }}
          owner: ${{ parameters.owner }}
          description: ${{ parameters.description }}
          destination: ${{ parameters.repoUrl | parseRepoUrl }}
          repoUrl: ${{ parameters.repoUrl }}
          system: ${{ parameters.system }}
    - id: acme:file:create
      name: Create a README file
      action: acme:file:create
      input:
        filename: README.md
        contents: |
          # ${{ parameters.name }}          
          ${{ parameters.description }}
          
          This is a new .NET 8 project created with ðŸ’š using Backstage.
    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts: ["github.com"]
        description: This is ${{ parameters.name }}
        repoUrl: ${{ parameters.repoUrl }}
        # repoVisibility: private
        gitCommitMessage: Create scaffold
        topics: ["backstage-include", "returngis"]
        defaultBranch: main
        secrets: { MY_SECRET: This is a secret }
        variables: { MY_VARIABLE: This is a variable }
    - id: github:ghas:configure
      name: Configure GitHub Advanced Security
      action: github:ghas:configure
      input:
        repoUrl: ${{ parameters.repoUrl }}
        code_scanning: enabled
        secret_scanning: enabled
        push_secret_protection: enabled
        dependabot: enabled
    - id: github-action
      name: Stating GitHub action
      action: github:actions:dispatch
      input:
        workflowId: ci.yml # ID of GitHub action WorkFlow
        repoUrl: ${{ parameters.repoUrl }}
        branchOrTagName: "main"
    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['publish'].output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml"

  # some outputs which are saved along with the job for use in the frontend
  output:
    links:
      - title: Repository
        url: ${{ steps['publish'].output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps['register'].output.entityRef }}
